// // 1. –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –∑ —Ç—Ä—å–æ—Ö —á–∏—Å–µ–ª. –ó–º—ñ–Ω–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –¥—Ä—É–≥–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –Ω–∞ 10.
// const number = [1, 2, 3];
// number[1] = 10;
// console.log(number);

// // 2. –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ —ñ–∑ —Ç—Ä—å–æ—Ö —Ä—è–¥–∫—ñ–≤. –î–æ–¥–∞—Ç–∏ –¥–æ –º–∞—Å–∏–≤—É —â–µ –æ–¥–Ω—É —Ä—è–¥–∫—ñ–≤.
// const ryadok = ["a", "b", "c"];
// ryadok[ryadok.length] = "d";
// console.log(ryadok);

// // 3. –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –ø–æ–≤–µ—Ä–Ω–µ —Å—É–º—É –≤—Å—ñ—Ö —á–∏—Å–µ–ª –≤ –º–∞—Å–∏–≤—ñ.
// const num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// let sum = 0;
// for (let i = 0; i < num.length; i += 1) {
//     const element = num[i];
//     sum += element;
// }
// console.log(sum);

// // 4. –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –∑ 5-—Ç–∏ —á–∏—Å–µ–ª. –í–∏–≤–µ—Å—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü–∏–∫–ª—É for.
// const numberThree = [1, 2, 3, 4, 5];
// for (const poryadkovo of numberThree) {
//     console.log(poryadkovo);
// }

// // 5. –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ —ñ–∑ 5-—Ç–∏ —Ä—è–¥–∫—ñ–≤. –í–∏–≤–µ—Å—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω –∫–æ–∂–µ–Ω —Ä—è–¥–æ–∫–∑ –º–∞—Å–∏–≤—É, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –±—ñ–ª—å—à–µ 5-—Ç–∏ —Å–∏–º–≤–æ–ª—ñ–≤.
// const ryadokTwo = ["asadasd", "b", "chfgfhd", "dasdasd", "e"];
// for (let ii = 0; ii < ryadokTwo.length; ii++) {
//     if (ryadokTwo[ii].length > 4) {
//       console.log(ryadokTwo[ii]);
//     }
// }

// // 6. –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –∑ 10-—Ç–∏ —á–∏—Å–µ–ª. –ó–Ω–∞–π—Ç–∏ —Ç–∞ –≤–∏–≤–µ—Å—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –º–∞—Å–∏–≤—É.
// const numberFour = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// let sumTwo = 0;
// for (let indexee = 0; indexee < numberFour.length; indexee++) {
//     const element = numberFour[indexee];
//     sumTwo += element;
// }
// console.log(sumTwo);

// // 7. –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Å–∏–≤ –∑ 10-—Ç–∏ —á–∏—Å–µ–ª. –ó–Ω–∞–π—Ç–∏ –≤—Å—ñ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤ –º–∞—Å–∏–≤—ñ —Ç–∞ –≤–∏–≤–µ—Å—Ç–∏ —ó—Ö –Ω–∞ –µ–∫—Ä–∞–Ω.
// const numberFive = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// let sumThree = 0;
// for (let index = 0; index < numberFive.length; index++) {
//     const elementTwo = numberFive[index];
//     if (elementTwo % 2 === 0) {
//         sumThree += elementTwo;
//     }
// }
// console.log(sumThree);


// –î–ó 2
console.log(`–î–ó 2`);

// 1. –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –æ–±'—î–¥–Ω—É—î –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–∏–Ω —Ä—è–¥–æ–∫. –ï–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å. –ù–µ—Ö–∞–π –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–æ—é.
const friends = ['Mango', 'Poly', 'Kiwi', 'Ajax'];
let string = '';

// üëâ –°–ø–æ—á–∞—Ç–∫—É —á–µ—Ä–µ–∑ for

for (let i = 0; i < friends.length; i += 1) {
    string += `${friends[i]}, `;
  }
console.log(string);

// üëâ –ü–æ—Ç—ñ–º —á–µ—Ä–µ–∑ join()

string = friends.join(", ");
console.log(string);

// 2. –ü—Ä–∞—Ü—é—î–º–æ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –∫–∞—Ä—Ç–æ–∫ –≤ trello. –ú–µ—Ç–æ–¥ splice() (–º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ–Ω—à—ñ –º–µ—Ç–æ–¥–∏)
const cards = ['–ö–∞—Ä—Ç–æ—á–∫–∞-1', '–ö–∞—Ä—Ç–æ—á–∫–∞-2', '–ö–∞—Ä—Ç–æ—á–∫–∞-3', '–ö–∞—Ä—Ç–æ—á–∫–∞-4', '–ö–∞—Ä—Ç–æ—á–∫–∞-5', '–ö–∞—Ä—Ç–æ—á–∫–∞-6'];
// 3. –í–∏–¥–∞–ª–∏—Ç–∏
let cardToRemove = cards.splice(2, 1);
console.log(cards);
// 4. –î–æ–¥–∞—Ç–∏
const cardToInsert = cards.push('–ö–∞—Ä—Ç–æ—á–∫–∞-6');
console.log(cards);
// 5. –û–Ω–æ–≤–∏—Ç–∏
console.log(`—è –Ω–µ —Ä–æ–∑—É–º—ñ—é —è–∫ –º–µ–Ω—ñ —Ü–µ –æ–Ω–æ–≤–∏—Ç–∏`);